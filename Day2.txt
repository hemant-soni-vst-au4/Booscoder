# Intro 
Manish - co founder = iit dhanbad

# getting into Maang = Big Product based 70 to 80
A) 80-100% round around DSA 
Reason 
1) Problem solving -> tools t solve tech problem 
2) logical skill/ mindset = consistency
3) Debugging skill => 80% all time of developer
4) Think in different direction 

B) Looking for System design 
1) LLD => readbl/extensible code => OOPs/ Solid principle/ Design pattren
2) HLD => Scalable system  => 5+ year of experience => architecting the system 

C) Looking for CS fundamentals
OS, Computer network, DBMS

D) 1 tech stack -> Project  => FUll stack development MERN 

# curriculum
DS Algo 
CS fundamentals
System design 


# Array Basic

Array = homogeneous data structure  that store elements at contiguous memory location 
int a[5] 
* Have memory limitation
* Fixed size 
Dynamic Array => Size is not fixed 
In javascript array is not typed dependent so there is no static array. JavaScript directly allows array as dynamic only.

# @ problem 
1) max value (med)
Given an array find the max value of expression
|A[i] - A[j]| + |i - j| where i != j 
 ways - 2 for loop, 2 pointer 

a) Brute force 
ans = 0
for i -> 0 to n 
 for j -> i+1 to n 
   value = |A[i] - A[j]| + |i - j|
   if(val > ans ) ans = value; 
return ans 
Time complexity - O(n2)
b) 2 pointer -> need pattren - decreasing and increasing 
c) concept => whenever you see modulous -> open that modulus 
by interchanging value of i and j => value is same 
i> j cases = j > i caes => only need to cover one case 

case 1 : A[i] > A[j] && i > j 
   A[i]-A[j]+ i-j => (A[i]+i) - (A[j]+j) => x-y 

case 2: A[i]< A[j] && i > j 
 A[j] - A[i] + i -j => 13 

 So final answer will be 15 

 Time complexity - O(n)
2) Rain water rapping (Hard)
array represent height of building arranged in a row find the total amount of water that can be trapped on top of them 

logic - minimum of max on right - max on left;

Ml MR min min-h => add the positive value 